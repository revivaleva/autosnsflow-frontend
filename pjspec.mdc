# pjspec: 自動投稿の選択と再試行仕様

この仕様書は、定期実行（every-5min）における予約投稿の選択・投稿・再試行の挙動を定義する。現在実装中（development）であり、リリース前にレビューとテストが必要。

## 目的
- 引用投稿が引用元の削除等で失敗して投稿処理が停止する事象を防ぐ
- 前回失敗した古い引用投稿よりも、新しい引用投稿を優先して投稿する
- 引用・通常投稿それぞれ1件ずつを同一5分実行内で最大1回ずつ投稿する
- 投稿処理でエラーが発生しても次の候補への処理を継続する
- 投稿に失敗した予約はメタデータを記録し、UIで失敗が視認できるようにする

## 主要ルール
1. 1アカウント当たりの投稿回数
   - every-5min の `runAutoPostForAccount` は、1回の実行で最大で「引用投稿 1 件」＋「通常投稿 1 件」を試行する（合計最大2件）。

2. 候補選出
   - GSI から候補を取得後、候補をタイプ別（quote / normal）に分離し、それぞれ古い順にソートして処理する。
   - ただし、`postAttempts` がある候補は優先度を下げ、まず `postAttempts === 0` のものを試行する。

3. 再試行と失敗メタ
   - 投稿失敗時に、該当予約レコードへ `postAttempts`（数値）をインクリメントし、`lastPostError`（短いエラーメッセージ）、`lastPostAttemptAt`（unix秒）を保存する。
   - 明らかに永久的なエラー（例: 引用元が削除されていると判定できる場合）は `permanentFailure=true` を付与し、次回以降はスキップされる。
   - `postAttempts >= 3` の場合は優先度を大幅に下げる（デフォルトでスキップ候補）。

4. エラー耐性
   - 各候補の投稿処理は個別に try/catch し、失敗はその候補のメタへ記録して処理を継続する。アカウント全体のループは続行する。

5. UI 表示
   - `ScheduledPostsTable` は `postAttempts > 0` や `lastPostError` がある予約行を強調表示（背景色変更）する。

## 開発中の注記
- 現在の実装ブランチ: `lambda`（ローカルで確認済み）
- 影響が大きい箇所のため、採用前に以下を実施する:
  - 単体テスト/統合テスト
  - DynamoDB の既存データに対する互換性確認
  - デプロイ前の Canary 実行

## TODO（実装タスク）
- T001 - T009 を参照（`pjtodo.mdc` に記載）

## 関連ファイル
- `lambda/scheduled-autosnsflow/src/handler.ts`
- `src/app/scheduled-posts/ScheduledPostsTable.tsx`


(作成日: development)