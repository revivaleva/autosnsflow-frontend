name: Deploy Lambda Function

on:
  push:
    branches:
      - lambda
    paths:
      - 'lambda/scheduled-autosnsflow/**'
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-1
  LAMBDA_FUNCTION_NAME: scheduled-autosnsflow

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: lambda/scheduled-autosnsflow/package-lock.json
    
    - name: Install shared dependencies
      run: |
        cd packages/shared && npm ci && npm run build
        cd ../backend-core && npm ci && npm run build
      if: hashFiles('packages/shared/package.json') != ''
    
    - name: Install Lambda dependencies
      run: |
        cd lambda/scheduled-autosnsflow
        npm ci
    
    - name: Build Lambda function
      run: |
        cd lambda/scheduled-autosnsflow
        npm run build
        npm run zip
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Deploy to Lambda
      run: |
        cd lambda/scheduled-autosnsflow
        aws lambda update-function-code \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --zip-file fileb://bundle.zip
    
    - name: Update function configuration (if needed)
      run: |
        aws lambda update-function-configuration \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --timeout 900 \
          --memory-size 1024 \
          --runtime nodejs20.x
      continue-on-error: true
